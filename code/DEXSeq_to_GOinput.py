#! /usr/bin/env python2

'''
Converts exon expression of DEXSeq results to average gene expression values
for a GO enrichment analysis.

# input.csv:

groupID	featureID	exonBaseMean	dispersion	stat	pvalue	padj	control	treatment	log2fold
ENSG00000006607.14_FARP2	E016	18.0817648557915	0.002116364122895	50.4534648567777	1.22024178188659E-12	4.4742456603972E-10	10.4912662912433	5.69316399101922	-1.76774406334062
ENSG00000009307.16_CSDE1	E016	25.3856876876215	0.001775484503147	22.4975405550868	2.10412824648398E-06	0.000244842770877	11.0548572773387	7.79644108966352	-1.01072663322751
ENSG00000011465.18_DCN	E023	50.9535841440131	0.000648917538896	69.4431907484006	7.86474436210421E-17	4.59860042469045E-14	14.6222112618104	8.58280973188022	-1.54444299297491
ENSG00000011465.18_DCN	E024	43.7298933761449	0.001724664982286	55.2085251390158	1.08397576355819E-13	4.55353389775652E-11	13.5276728202322	7.97061408840096	-1.53240952746738
ENSG00000011465.18_DCN	E025	164.143096561724	0.001799487512343	129.85746250615	4.40285696893011E-30	7.77153864672152E-27	25.7819383144717	16.2745209413389	-1.34788426306654
ENSG00000011465.18_DCN+ENSG00000153485.6_TMEM251+ENSG00000259066.5_AL110118.2	E006	103.602998902828	0.000377257607131	105.965832520061	7.50175712349438E-25	9.01095247272542E-22	21.8990712771572	15.4770159273695	-1.0137357965488
ENSG00000011465.18_DCN+ENSG00000153485.6_TMEM251+ENSG00000259066.5_AL110118.2	E007	48.6417693115581	0.000794025197982	81.1916320398222	2.04857573180393E-19	1.54970013945793E-16	15.592290726305	9.69520613825779	-1.37860026607134
ENSG00000011465.18_DCN+ENSG00000153485.6_TMEM251+ENSG00000259066.5_AL110118.2	E008	142.170050736146	0.000379782342644	231.287604129205	3.12277670773871E-52	1.56542298137575E-48	26.3512864467233	16.8666775531716	-1.30829741405566
ENSG00000011465.18_DCN+ENSG00000153485.6_TMEM251+ENSG00000259066.5_AL110118.2	E009	73.5660177868316	0.000734473801982	102.636338332392	4.02678865287655E-24	4.58772031222225E-21	18.944534854935	12.3587733203275	-1.24302216083761
ENSG00000013810.20_TACC3+ENSG00000270195.2_AC016773.2	E003	26.8124055878146	0.007752464572764	51.0726621857579	8.90093230935999E-13	3.31334120734432E-10	11.2932712206573	5.6732215692814	-1.99132303689618
ENSG00000013810.20_TACC3+ENSG00000270195.2_AC016773.2	E004	31.5220963047947	0.001185804939599	57.0582559360504	4.23091525243495E-14	1.86263814583456E-11	12.0221386788933	6.78150753254903	-1.65707028255157
ENSG00000015479.20_MATR3+ENSG00000281398.4_SNHG4+ENSG00000280987.4_MATR3	E009	26.8538941215619	0.018013079947557	43.0741722101777	5.27034256416319E-11	1.51643944444392E-08	12.2998866938886	6.1632329562496	-1.99956531319099
ENSG00000015479.20_MATR3+ENSG00000281398.4_SNHG4+ENSG00000280987.4_MATR3	E013	37.4163157312789	0.025287658400553	35.0015314627636	3.29446113149031E-09	7.02162844186666E-07	14.2820203686964	7.68326171075961	-1.79622835543976
ENSG00000015479.20_MATR3+ENSG00000281398.4_SNHG4+ENSG00000280987.4_MATR3	E014	77.9496873453055	0.005382620380429	79.5412609420439	4.72259067617187E-19	3.46110661584729E-16	20.0522446763393	12.0242971955503	-1.48877348750585
ENSG00000015479.20_MATR3+ENSG00000281398.4_SNHG4+ENSG00000280987.4_MATR3	E017	82.247380928832	0.008745670957325	90.5678527891097	1.7874096918546E-21	1.6842371790398E-18	21.1128059015762	11.3841461964651	-1.79832891541495
ENSG00000015479.20_MATR3+ENSG00000281398.4_SNHG4+ENSG00000280987.4_MATR3	E018	33.3770138623352	0.025845070437265	17.7572501885309	2.50959273155238E-05	0.002134198302848	12.9423769093542	8.32810192613789	-1.27710390420638
ENSG00000015479.20_MATR3+ENSG00000281398.4_SNHG4+ENSG00000280987.4_MATR3	E021	37.8804077284408	0.002612239416596	54.2861495114405	1.73319164026066E-13	7.10606682439651E-11	13.959203892728	8.51887450974891	-1.43121535278376
ENSG00000015479.20_MATR3+ENSG00000281398.4_SNHG4+ENSG00000280987.4_MATR3	E022	85.3307242028863	0.001748741021184	236.829384203042	1.9322356583308E-53	1.00897320587079E-49	22.0891496541369	10.3486695795433	-2.20723136352276
ENSG00000015479.20_MATR3+ENSG00000281398.4_SNHG4+ENSG00000280987.4_MATR3	E023	24.454738412281	0.003636807964802	50.2900610252781	1.32619523248162E-12	4.81282138379229E-10	11.5482245556821	6.31884057605532	-1.74465661890509
ENSG00000015479.20_MATR3+ENSG00000281398.4_SNHG4+ENSG00000280987.4_MATR3	E024	152.819395687493	0.002606477405543	167.860645326881	2.16990056891089E-38	5.99864225730044E-35	27.9709496348209	16.5962145097091	-1.53199318447627
ENSG00000015479.20_MATR3+ENSG00000281398.4_SNHG4+ENSG00000280987.4_MATR3	E025	56.3173010466021	0.001661819612144	199.166673669344	3.17456488406196E-45	1.24326873426655E-41	18.229295385115	7.82018081599324	-2.4558252735747
ENSG00000015479.20_MATR3+ENSG00000281398.4_SNHG4+ENSG00000280987.4_MATR3	E026	89.0611976983026	0.00305329751499	280.060332996659	7.28531841817493E-63	5.58990587829145E-59	23.0969912220526	9.268500887318	-2.65744566020792
ENSG00000015479.20_MATR3+ENSG00000281398.4_SNHG4+ENSG00000280987.4_MATR3	E027	117.175828865043	0.001561324250336	419.05588957996	3.91691013152322E-93	7.7507199223087E-89	26.4515809478187	10.5147710485932	-2.69193213756648
ENSG00000015479.20_MATR3+ENSG00000281398.4_SNHG4+ENSG00000280987.4_MATR3	E028	73.1508705380044	0.00620682839645	199.875994067357	2.22276120698447E-45	8.79672956030258E-42	21.0285943302193	8.15890073739769	-2.75099790938756
ENSG00000015479.20_MATR3+ENSG00000281398.4_SNHG4+ENSG00000280987.4_MATR3	E029	319.193943040235	0.005489270544355	313.516031041445	3.7436452496059E-70	4.13968988485024E-66	41.9404537862924	19.3357694460974	-2.30448745658484
ENSG00000022267.19_FHL1	E035	47.7183277715319	0.018343302018395	73.7946173812359	8.66826497896651E-18	5.59965449463412E-15	5.22901859616547	14.3271920445309	2.91738445101723
ENSG00000034713.8_GABARAPL2	E008	118.838708660559	0.000424540011425	185.668779097571	2.80413627838631E-42	9.49791272476237E-39	24.4599379285046	15.4884631368432	-1.33673819610536

# output.csv:

gene	mean_log2fold
ENSG00000006607.14	-1.76774406334062
ENSG00000009307.16	-1.01072663322751
ENSG00000011465.18	-1.3383417744317485
ENSG00000153485.6	-1.2359139093783524
ENSG00000259066.5	-1.2359139093783524
ENSG00000013810.20	-1.824196659723875
ENSG00000270195.2	-1.824196659723875
ENSG00000015479.20	-2.009698923769094
ENSG00000281398.4	-2.009698923769094
ENSG00000280987.4	-2.009698923769094
ENSG00000022267.19	2.91738445101723
ENSG00000034713.8	-1.33673819610536

#command:

$  python DEXSeq_to_GOinput.py \
  -i input.csv \
  -c log2fold \
  -o output.csv

#contact:

Dmytro Kryvokhyzha dmytro.kryvokhyzha@evobio.eu

'''

############################# modules #############################

import argparse, sys  # for input options

############################# options #############################

class CommandLineParser(argparse.ArgumentParser):
    def error(self, message):
        sys.stderr.write('error: %s\n' % message)
        self.print_help()
        sys.exit(2)

parser = CommandLineParser()
parser.add_argument(
    '-i',
    '--input',
    help='name of the DEXSeq results table',
    type=str,
    required=True)
parser.add_argument(
    '-c',
    '--colname',
    help='name of the DEXSeq results column to average',
    type=str,
    required=True)
parser.add_argument(
    '-o',
    '--output',
    help='name of the output file',
    type=str, required=True)
args = parser.parse_args()


############################# program #############################

colname = args.colname
output = open(args.output, 'w')
geneDict = {}

with open(args.input) as datafile:

  header = datafile.readline().strip('\n').replace('"', '').split("\t")
  try:
    colindex = header.index(colname)
  except ValueError:
    print('Invalid column name %s' % colname)

  output.write('gene\tmean_%s\n' % str(header[colindex]))

  for line in datafile:
    words = line.strip('\n').replace('"', '').split("\t")
    group = words[0]
    if words[colindex] != "NA":
      logFC = float(words[colindex])
      for i in group.split('+'):
        # split overlapping exons:
        gene = i.split('_')[0]
        # create a dict of genes and their logFC:
        if gene in geneDict.keys(): 
          geneDict[gene].append(logFC)
        else:
          geneDict[gene] = [logFC]

for k in geneDict.keys():
  l = geneDict[k]
  avg_logFC = sum(l) / len(l)
  output.write('%s\t%s\n' % (k, avg_logFC))

datafile.close()
output.close()

print('Done!')
